#!/usr/bin/env ruby
require 'optparse'
require File.join(File.dirname(File.readlink(__FILE__)), '..', 'lib', 'twig')
Dir[File.join(File.dirname(File.readlink(__FILE__)), '..', 'lib', 'twig', '*.rb')].each do |file|
  require file
end


# Handle options
options = {}
OptionParser.new do |opts|
  opts.banner = 'Usage: twig <key> [<value>] [-b <branch>] [--help]'

  opts.on('-b BRANCH', Twig.branches, 'Use specific branch') do |branch|
    if Twig.branches.include?(branch)
      options[:branch] = branch
    else
      abort %{The branch "#{branch}" could not be found.}
    end
  end

  opts.on('--max-days-old AGE', 'Only list branches below a given age') do |age|
    if Twig::Util.numeric?(age)
      options[:max_days_old] = age.to_f
    else
      abort %{The value `--max-days-old=#{age}` is invalid.}
    end
  end

  opts.on_tail('--version', 'Show version') do
    puts Twig.version
    exit
  end
end.parse!

# Handle remaining arguments
args = ARGV.dup
if args[0]
  branch = options[:branch] || Twig.current_branch
  if args[1]
    # `$ twig <key> <value>`
    puts Twig.set_branch_property(branch, args[0], args[1])
  else
    # `$ twig <key>`
    puts Twig.get_branch_property(branch, args[0])
  end
else
  # `$ twig`
  branch_list_options = Twig::Util.hash_slice(options, [:max_days_old])
  puts Twig.list_branches(branch_list_options)
end
